#See https://aka.ms/customizecontainer to learn how to customize your debug container and how Visual Studio uses this Dockerfile to build your images for faster debugging.

FROM mcr.microsoft.com/dotnet/aspnet:8.0 AS base
USER app
WORKDIR /app
EXPOSE 8086

FROM mcr.microsoft.com/dotnet/sdk:8.0 AS build
ARG BUILD_CONFIGURATION=Release
WORKDIR /src
COPY ["src/Services/capygram.Newsfeed/capygram.Newsfeed.csproj", "src/Services/capygram.Newsfeed/"]
COPY ["src/Services/capygram.Common/capygram.Common.csproj", "src/Services/capygram.Common/"]
RUN dotnet restore "./src/Services/capygram.Newsfeed/capygram.Newsfeed.csproj"
COPY . .
WORKDIR "/src/src/Services/capygram.Newsfeed"
RUN dotnet build "./capygram.Newsfeed.csproj" -c $BUILD_CONFIGURATION -o /app/build

FROM build AS publish
ARG BUILD_CONFIGURATION=Release
RUN dotnet publish "./capygram.Newsfeed.csproj" -c $BUILD_CONFIGURATION -o /app/publish /p:UseAppHost=false

FROM base AS final
WORKDIR /app
COPY --from=publish /app/publish .
ENTRYPOINT ["dotnet", "capygram.Newsfeed.dll"]

# Test RabbitMQ connectivity
CMD ["bash", "-c", "\
    for i in {1..30}; do \
        nc -zv rabbitmq.rabbitmq-local 5672 && break; \
        echo 'Waiting for RabbitMQ to start...'; \
        sleep 5; \
    done \
"]
